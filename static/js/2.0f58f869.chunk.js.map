{"version":3,"file":"static/js/2.0f58f869.chunk.js","mappings":"8LACe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXAD,GAAM,EAAAE,EAAA,GAAcF,MACTD,EACTI,OAAOC,eAAeL,EAAKC,EAAK,CAC9BC,MAAOA,EACPI,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZR,EAAIC,GAAOC,EAENF,CACT,CCbA,SAASS,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GACvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GAC3CC,IAAmBG,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,UACtD,KAAKM,EAAKM,KAAKC,MAAMP,EAAME,EAC7B,CACA,OAAOF,CACT,CACe,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAS,MAAQF,UAAUD,GAAKC,UAAUD,GAAK,CAAC,EACpDA,EAAI,EAAIb,EAAQL,OAAOqB,IAAS,GAAIC,SAAQ,SAAUzB,GACpD,EAAeoB,EAAQpB,EAAKwB,EAAOxB,GACrC,IAAKG,OAAOuB,0BAA4BvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAAWhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUzB,GAC5JG,OAAOC,eAAegB,EAAQpB,EAAKG,OAAOa,yBAAyBQ,EAAQxB,GAC7E,GACF,CACA,OAAOoB,CACT,C,6GC8GA,EAxHmB,WACjB,IAPoBQ,EAOZC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,MAAK,eAAvCC,EAAQ,KAAEC,EAAW,KACtBC,GAAWC,EAAAA,EAAAA,MASjB,OAPAC,EAAAA,EAAAA,YAAU,YACR,uBAAC,0GACwBC,EAAAA,EAAAA,IAAYR,GAAS,KAAD,EAArCG,EAAQ,OACdC,EAAYD,GAAU,0CAFxB,EAIF,GAAG,CAACH,KAGF,iCACE,SAAC,KAAI,CACHS,GAAIJ,EAASK,MAAMC,KACnBC,WAAWC,EAAAA,EAAAA,IAAG,2OAQZ,sBAIJ,gBACED,WAAWC,EAAAA,EAAAA,IAAG,iJAKZ,SAEDV,IACC,iCACE,gBACEW,IAAG,0CAAqCX,EAASY,aACjDC,IAAKb,EAASc,OAASd,EAASe,KAChCN,WAAWC,EAAAA,EAAAA,IAAG,uGAKhB,iBACED,WAAWC,EAAAA,EAAAA,IAAG,sVAUZ,WAEF,uBAAIV,EAASc,OAASd,EAASe,QAC/B,0BACGC,SAAShB,EAASiB,cAAgBjB,EAASkB,mBAE9C,oCAAYlB,EAASmB,aAAaC,QAAQ,OAC1C,eACEX,WAAWC,EAAAA,EAAAA,IAAG,8EAEZ,uBAESV,EAASqB,aAEtB,qCA7EQzB,EA6EkBI,EAASsB,OA5ExC1B,EAAWL,OAAS,EAAC,UACrBK,EAAW,GAAGmB,KAAI,aAAKnB,EAAW,GAAGmB,KAAI,sBACzCnB,EAAW,GAAGmB,MAAQ,sBA+EzB,iBACEN,WAAWC,EAAAA,EAAAA,IAAG,mHAIZ,WAEF,SAAC,KAAI,CACHJ,GAAG,OACHC,MAAO,CAAEC,KAAK,KAAMN,EAASK,MAAMC,OACnCC,WAAWC,EAAAA,EAAAA,IAAG,2PAQZ,mBAIJ,SAAC,KAAI,CACHJ,GAAG,UACHC,MAAO,CAAEC,KAAK,KAAMN,EAASK,MAAMC,OACnCC,WAAWC,EAAAA,EAAAA,IAAG,2PAQZ,yBAMN,SAAC,KAAM,MAGb,C","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","page/MoviesInfo/MoviesInfo.jsx"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import { useEffect, useState } from 'react';\nimport { getFilmById } from 'service/request';\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport { css } from '@emotion/css';\n\nconst getGenresFilm = genresName => {\n  return genresName.length > 1\n    ? `${genresName[0].name}, ${genresName[1].name} , Other`\n    : `${genresName[0].name || 'Other'}`;\n};\n\nconst MoviesInfo = () => {\n  const { movieId } = useParams();\n  const [filmById, setFilmById] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    (async () => {\n      const filmById = await getFilmById(movieId);\n      setFilmById(filmById);\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link\n        to={location.state.from}\n        className={css`\n          padding: 15px;\n          width: 10%;\n          background-color: brown;\n          font-size: 24px;\n          color: bisque;\n          border-radius: 10px;\n          border-color: brown;\n        `}\n      >\n        Go back\n      </Link>\n      <div\n        className={css`\n          display: flex;\n          justify-content: center;\n          gap: 10px;\n          list-style: none;\n        `}\n      >\n        {filmById && (\n          <>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${filmById.poster_path}`}\n              alt={filmById.title || filmById.name}\n              className={css`\n                display: block;\n                width: 45%;\n              `}\n            />\n            <div\n              className={css`\n                display: flex;\n                flex-direction: column;\n                align-items: flex-start;\n                gap: 10px;\n                width: 45%;\n                padding: 20px;\n                color: brown;\n                font-size: 28px;\n                font-weight: 600;\n              `}\n            >\n              <p>{filmById.title || filmById.name}</p>\n              <span>\n                {parseInt(filmById.release_date || filmById.first_air_date)}\n              </span>\n              <p>Rating: {filmById.vote_average.toFixed(1)}</p>\n              <p\n                className={css`\n                  text-align: start;\n                `}\n              >\n                Overview: {filmById.overview}\n              </p>\n              <p>Genres: {getGenresFilm(filmById.genres)}</p>\n            </div>\n          </>\n        )}\n      </div>\n      <div\n        className={css`\n          display: flex;\n          gap: 30px;\n          justify-content: start;\n        `}\n      >\n        <Link\n          to=\"cast\"\n          state={{ from: { ...location.state.from } }}\n          className={css`\n            padding: 15px;\n            width: 10%;\n            background-color: brown;\n            font-size: 24px;\n            color: bisque;\n            border-radius: 10px;\n            border-color: brown;\n          `}\n        >\n          Cast\n        </Link>\n        <Link\n          to=\"reviews\"\n          state={{ from: { ...location.state.from } }}\n          className={css`\n            padding: 15px;\n            width: 10%;\n            background-color: brown;\n            font-size: 24px;\n            color: bisque;\n            border-radius: 10px;\n            border-color: brown;\n          `}\n        >\n          Reviews\n        </Link>\n      </div>\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default MoviesInfo;\n"],"names":["_defineProperty","obj","key","value","toPropertyKey","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","genresName","movieId","useParams","useState","filmById","setFilmById","location","useLocation","useEffect","getFilmById","to","state","from","className","css","src","poster_path","alt","title","name","parseInt","release_date","first_air_date","vote_average","toFixed","overview","genres"],"sourceRoot":""}